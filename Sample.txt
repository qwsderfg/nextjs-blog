import { useState } from 'react';
import { BiStats, BiHomeAlt2 } from "react-icons/bi";
import { GrConnect } from "react-icons/gr";
import { HiOutlineCollection } from "react-icons/hi";
import { FaSearch } from "react-icons/fa";

const MobileNav = () => {
  const [activeTab, setActiveTab] = useState('home');

  const style = {
    body: {
      display: 'flex',
      justifyContent: 'flex-end',
      alignItems: 'flex-end',
      position: 'fixed',
      bottom: '0',
      left: '0',
      width: '100%',
      backgroundColor: 'gray',
    },
    navigation: {
      width: '100%',
      height: '70px', // Increased height by 20px
      background: 'gray',
      display: 'flex',
      justifyContent: 'space-between',
      alignItems: 'center',
      padding: '',
      boxSizing: 'border-box',
      position: 'relative',
    },
    ul: {
      display: 'flex',
      flex: '1',
      padding: '0',
      justifyContent: 'space-between',
      alignItems: 'center',
    },
    li: {
      listStyle: 'none',
      position: 'relative',
      zIndex: '2',
      width: '20%',
      textAlign: 'center',
    },
    a: {
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center',
      textDecoration: 'none',
      color: 'gray',
    },
    icon: {
      lineHeight: '70px',
      fontSize: '1.5em',
      transition: '0.5s',
      marginTop:'0',
      marginLeft:'',
    },
    activeIcon: {
      transform: 'translateY(-15px)',
      color: 'orangered',
    },
    text: {
      background: 'orangered',
      color: '#fff',
      padding: '5px 10px',
      borderRadius: '12px',
      fontWeight: '400',
      fontSize: '0.75em',
      letterSpacing: '0.05em',
      transition: '0.5s',
      opacity: '0',
      transform: 'translateY(15px)',
      whiteSpace: 'nowrap',
    },
    activeText: {
      transform: 'translateY(10px)',
      opacity: '1',
    },
    indicator: {
      position: 'absolute',
      bottom: '0',
      left: '0',
      width: '20%',
      height: '100%',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      boxSizing: 'border-box',
    },
    indicatorBefore: {
      content: '',
      top: '-20px',
      position: 'absolute',
      width: '50px',
      height: '50px',
      background: 'gray',
      borderRadius: '50%',
      transition: '0.5s',
    },
    // Define different positions for the indicator based on active tab
    homeIndicator: {
      left: '0',
    },
    collectionsIndicator: {
      left: '20%',
    },
    searchIndicator: {
      left: '40%',
    },
    statsIndicator: {
      left: '60%',
    },
    connectIndicator: {
      left: '80%',
    },
  };

  const handleTabClick = (tab) => {
    setActiveTab(tab);
  };

  return (
    <div style={style.body}>
      <div style={style.navigation}>
        <ul style={style.ul}>
          <li style={style.li} className={activeTab === 'home' ? 'active' : ''}>
            <a href="#" onClick={() => handleTabClick('home')}>
              <span style={{ ...style.icon, ...(activeTab === 'home' ? style.activeIcon : {}) }}>
                <BiHomeAlt2 style={{ marginBottom: activeTab === 'home' ? '-15px' : '-70px' }} />
              </span>
              <span style={{ ...style.text, ...(activeTab === 'home' ? style.activeText : {}) }}>Home</span>
            </a>
          </li>
          <li style={style.li} className={activeTab === 'collections' ? 'active' : ''}>
            <a href="#" onClick={() => handleTabClick('collections')}>
              <span style={{ ...style.icon, ...(activeTab === 'collections' ? style.activeIcon : {}) }}>
                <HiOutlineCollection style={{ marginBottom: activeTab === 'collections' ? '-15px' : '-70px' }} />
              </span>
              <span style={{ ...style.text, ...(activeTab === 'collections' ? style.activeText : {}) }}>Collections</span>
            </a>
          </li>
          <li style={style.li} className={activeTab === 'search' ? 'active' : ''}>
            <a href="#" onClick={() => handleTabClick('search')}>
              <span style={{ ...style.icon, ...(activeTab === 'search' ? style.activeIcon : {}) }}>
                <FaSearch style={{ marginBottom: activeTab === 'search' ? '-15px' : '-70px' }} />
              </span>
              <span style={{ ...style.text, ...(activeTab === 'search' ? style.activeText : {}) }}>Search</span>
            </a>
          </li>
          <li style={style.li} className={activeTab === 'stats' ? 'active' : ''}>
            <a href="#" onClick={() => handleTabClick('stats')}>
              <span style={{ ...style.icon, ...(activeTab === 'stats' ? style.activeIcon : {}) }}>
                <BiStats style={{ marginBottom: activeTab === 'stats' ? '-15px' : '-70px' }} />
              </span>
              <span style={{ ...style.text, ...(activeTab === 'stats' ? style.activeText : {}) }}>Stats</span>
            </a>
          </li>
          <li style={style.li} className={activeTab === 'connect' ? 'active' : ''}>
            <a href="#" onClick={() => handleTabClick('connect')}>
              <span style={{ ...style.icon, ...(activeTab === 'connect' ? style.activeIcon : {}) }}>
                <GrConnect style={{ marginBottom: activeTab === 'connect' ? '-15px' : '-70px' }} />
              </span>
              <span style={{ ...style.text, ...(activeTab === 'connect' ? style.activeText : {}) }}>Connect</span>
            </a>
          </li>
        </ul>
        {/* Apply style for indicator based on active tab */}
        <div style={{ ...style.indicator, ...(style[activeTab + 'Indicator'] || {}) }}>
          <div style={style.indicatorBefore}></div>
        </div>
      </div>
    </div>
  );
};

export default MobileNav;
